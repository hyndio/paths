<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/lang 
    http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
    <context:component-scan base-package="f.rd.paths">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <context:annotation-config />
    
    <!-- i18n -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:messages</value>
                <value>classpath:org/springframework/security/messages_zh_CN</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
    
    <!-- 数据连接配置信息 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- c3p0 pool -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${connection.driver_class}"></property>
        <property name="jdbcUrl" value="${connection.url}"></property>
        <property name="user" value="${connection.username}"></property>
        <property name="password" value="${connection.password}"></property>
        <property name="maxPoolSize" value="${pool.maximum.connection.count}"/>
        <property name="minPoolSize" value="${pool.minimum.connection.count}"/>
        <property name="initialPoolSize" value="${pool.initialPoolSize}"/>
        <property name="maxIdleTime" value="${pool.maxIdleTime}"/>
	</bean>

  	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
    	<property name="dataSource" ref="dataSource"/>
    	<property name="packagesToScan">
			<list>
				<value>f.rd.paths.web.security.model</value>
				<value>f.rd.paths.organization.model</value>
			</list>
		</property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
                <!-- cache -->
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>
                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
            </props>
        </property>
  	</bean>
  	
  	<!-- A transaction manager for working with Hibernate SessionFactories -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 开启注解事务，只对当前配置文件有效 -->
  	<tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 缓存管理 -->
    <cache:annotation-driven />
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" >
		<property name="configLocation">  
            <value>classpath:ehcache-cfg.xml</value>
        </property> 
	</bean>
    
    <!-- 定时任务调试测试 -->
    
    <!-- 线程执行器配置，用于任务注册 
	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	 <property name="corePoolSize" value="10" />
	 <property name="maxPoolSize" value="100" />
	 <property name="queueCapacity" value="500" />
	</bean>-->
    
    <!-- 
    <bean id="springQuartzTimer" class="f.rd.paths.SpringQuartzTimer" />
    <bean id="taskTimer" class="f.rd.paths.timer.TaskTimer" /> -->
    
    <!-- 定义目标bean和bean中的方法   
    <bean id="SpringQtzJobMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	    <property name="targetObject" ref="springQuartzTimer" />  
	    <property name="targetMethod" value="doBiz" />
    </bean>
    
    <bean id="taskTimerJobMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	    <property name="targetObject" ref="taskTimer" />  
	    <property name="targetMethod" value="execute" />
    </bean>
    -->
    
    <!-- 调度触发器    
	<bean id="CronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">  
	    <property name="jobDetail" ref="SpringQtzJobMethod"></property>  
	    <property name="cronExpression" value="10 0/1 * * * ?"></property>  
	</bean> 
	
	<bean id="timeTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">  
	    <property name="jobDetail" ref="taskTimerJobMethod"></property>  
	    <property name="cronExpression" value="0/5 * * * * ?"></property>  
	</bean>  -->
	  
	<!-- 调度工厂   
	<bean id="SpringJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	    <property name="triggers">  
	        <list>  
	            <ref bean="CronTriggerBean"/>  
	            <ref bean="timeTriggerBean"/>
	        </list>  
	    </property>
	    <property name="taskExecutor" ref="executor" />
	</bean>  -->
    
</beans>
